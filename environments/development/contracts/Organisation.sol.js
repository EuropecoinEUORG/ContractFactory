// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"_id","type":"uint256"}],"name":"acceptTask","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"taskId","type":"uint256"},{"name":"paymentAddress","type":"address"}],"name":"completeAndPayTask","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"taskId","type":"uint256"}],"name":"contributeEth","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"taskDB","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"taskId","type":"uint256"},{"name":"shares","type":"uint256"}],"name":"contributeShares","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"symbol_","type":"bytes4"}],"name":"setSharesSymbol","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"userAddress","type":"address"}],"name":"getUserInfo","outputs":[{"name":"admin","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"string"},{"name":"_summary","type":"string"}],"name":"makeTask","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"ParentResolverAddress_","type":"address"}],"name":"registerParentResolver","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"getParent","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"parentResolver","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"generateNodeShares","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"users","outputs":[{"name":"admin","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_id","type":"uint256"},{"name":"_name","type":"string"},{"name":"_summary","type":"string"}],"name":"updateTask","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"shareLedger","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"title_","type":"bytes32"}],"name":"setSharesTitle","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_tasksDBAddress","type":"address"}],"name":"registerTaskDB","outputs":[],"type":"function"},{"inputs":[{"name":"ParentResolverAddress_","type":"address"},{"name":"_shareLedgerAddress","type":"address"},{"name":"_tasksDBAddress","type":"address"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":true,"name":"_ethValue","type":"uint256"},{"indexed":true,"name":"_sharesValue","type":"uint256"}],"name":"TaskCompletedAndPaid","type":"event"}],
    binary: "6060604052604051606080610bce83395060c06040525160805160a051600160a060020a0332166000908152600360205260408120805460ff191660019081179091558154600160a060020a0319908116861790925580548216841790556002805490911682179055505050610b55806100796000396000f3606060405236156100cf5760e060020a60003504631bf6912d81146100d15780632f6da7bb1461011d578063352d722f146101a25780634f6765d7146101fd5780635b28e4451461020f5780635ef00f181461026d5780636386c1c7146102d05780636d2d4bac146102f957806371f5a54c1461049a57806380f76021146104c05780638f4182f7146105215780639f795ca114610533578063a87430ba14610596578063c72ef41f146105b1578063d97b94e914610761578063f074347e14610773578063f08762e2146107d6575b005b6100cf60043560025460e060020a631bf6912d0260609081526064839052600160a060020a0390911690631bf6912d9060849060009060248183876161da5a03f1156100025750505050565b6100cf60043560243560025460e160020a6351ce2f9f026060908152606484905260009182918291600160a060020a03169063a39c5f3e9060849060209060248187876161da5a03f11561000257505060405151935083905080610198575033600160a060020a031681526003602052604081205460ff1681145b1561096a57610002565b6100cf60043560025460e160020a6351ce2f9f0260609081526064839052600091600160a060020a03169063a39c5f3e9060849060209060248187876161da5a03f11561000257505060405151915050801561081957610002565b6107fc600254600160a060020a031681565b6100cf60043560243560025460e160020a6351ce2f9f0260609081526064849052600091600160a060020a03169063a39c5f3e9060849060209060248187876161da5a03f11561000257505060405151915050801561088a57610002565b6100cf6004356001547f5ef00f180000000000000000000000000000000000000000000000000000000060609081526064839052600160a060020a039190911690635ef00f189060849060009060248183876161da5a03f1156100025750505050565b600160a060020a036004351660009081526003602052604090205460ff165b6060908152602090f35b60206004803580820135601f8101849004909302608090810160405260608481526100cf9460249391929184019181908382808284375050604080516020601f8935808c01359182018390048302840183019094528083529799986044989297509290920194509250829150840183828082843750949650505050505050600254604080517f6d2d4bac0000000000000000000000000000000000000000000000000000000081526004818101928352855160448301528551600160a060020a039490941693636d2d4bac93879387939192839260248301926064019160809181908490829085906000906020601f850104600f02600301f150905090810190601f16801561041c5780820380516001836020036101000a031916815260200191505b508381038252848181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104755780820380516001836020036101000a031916815260200191505b509450505050506000604051808303816000876161da5a03f115610002575050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff19166004351790556100cf565b600080547f5beb8a310000000000000000000000000000000000000000000000000000000060609081526107fc9291600160a060020a031690635beb8a319060649060209060048187876161da5a03f1156100025750506040515191505090565b6107fc600054600160a060020a031681565b6100cf6004356001547f5e823d960000000000000000000000000000000000000000000000000000000060609081526064839052600160a060020a039190911690635e823d969060849060009060248183876161da5a03f1156100025750505050565b6102ef60043560036020526000908152604090205460ff1681565b6080602060248035600481810135601f8101859004909402850160405260608481526100cf958235959294604494929392019190819083828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506002546040517fc72ef41f0000000000000000000000000000000000000000000000000000000081528089018b8152602482018b81528b51998301999099528a519799600160a060020a03939093169863c72ef41f988d98508c97508b96509194509260448301926084019160809181908490829085906000906003600f6020601f8701040201f150905090810190601f1680156106e15780820380516001836020036101000a031916815260200191505b508381038252848181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f16801561073a5780820380516001836020036101000a031916815260200191505b50955050505050506000604051808303816000876161da5a03f11561000257505050505050565b6107fc600154600160a060020a031681565b6100cf6004356001547ff074347e0000000000000000000000000000000000000000000000000000000060609081526064839052600160a060020a03919091169063f074347e9060849060009060248183876161da5a03f1156100025750505050565b6002805473ffffffffffffffffffffffffffffffffffffffff19166004351790556100cf565b60408051600160a060020a03929092168252519081900360200190f35b604080516002547f35960812000000000000000000000000000000000000000000000000000000008252600482018590523460248301529151600160a060020a039290921691633596081291604481810192600092909190829003018183876161da5a03f115610002575050505050565b604080516002547f5b28e44500000000000000000000000000000000000000000000000000000000825260048201869052602482018590529151600160a060020a039290921691635b28e44591604481810192600092909190829003018183876161da5a03f115610002575050604080516001547fa9059cbb00000000000000000000000000000000000000000000000000000000825230600160a060020a0390811660048401526024830187905292519216925063a9059cbb916044828101926000929190829003018183876161da5a03f11561000257505050505050565b600260009054906101000a9004600160a060020a0316600160a060020a031663cacb4f16866040518260e060020a028152600401808281526020019150506040604051808303816000876161da5a03f115610002575050604080518051602082015160025460e060020a631bf6912d028452600484018b9052935191965094600160a060020a03939093169350631bf6912d92602483810193919291829003018183876161da5a03f115610002575050506000811115610b0257604080516001547f18160ddd00000000000000000000000000000000000000000000000000000000825291518392600160a060020a0316916318160ddd91600482810192602092919082900301816000876161da5a03f11561000257505050604051805190602001501015610a9857610002565b600160009054906101000a9004600160a060020a0316600160a060020a031663a9059cbb85836040518360e060020a0281526004018083600160a060020a03168152602001828152602001925050506000604051808303816000876161da5a03f115610002575050505b808285600160a060020a03167fbf334802c86a270265a8ca2656b2bff943a5f2a75b3adaf4b282052663bb6624306040518082600160a060020a0316815260200191505060405180910390a4505050505056",
    unlinked_binary: "6060604052604051606080610bce83395060c06040525160805160a051600160a060020a0332166000908152600360205260408120805460ff191660019081179091558154600160a060020a0319908116861790925580548216841790556002805490911682179055505050610b55806100796000396000f3606060405236156100cf5760e060020a60003504631bf6912d81146100d15780632f6da7bb1461011d578063352d722f146101a25780634f6765d7146101fd5780635b28e4451461020f5780635ef00f181461026d5780636386c1c7146102d05780636d2d4bac146102f957806371f5a54c1461049a57806380f76021146104c05780638f4182f7146105215780639f795ca114610533578063a87430ba14610596578063c72ef41f146105b1578063d97b94e914610761578063f074347e14610773578063f08762e2146107d6575b005b6100cf60043560025460e060020a631bf6912d0260609081526064839052600160a060020a0390911690631bf6912d9060849060009060248183876161da5a03f1156100025750505050565b6100cf60043560243560025460e160020a6351ce2f9f026060908152606484905260009182918291600160a060020a03169063a39c5f3e9060849060209060248187876161da5a03f11561000257505060405151935083905080610198575033600160a060020a031681526003602052604081205460ff1681145b1561096a57610002565b6100cf60043560025460e160020a6351ce2f9f0260609081526064839052600091600160a060020a03169063a39c5f3e9060849060209060248187876161da5a03f11561000257505060405151915050801561081957610002565b6107fc600254600160a060020a031681565b6100cf60043560243560025460e160020a6351ce2f9f0260609081526064849052600091600160a060020a03169063a39c5f3e9060849060209060248187876161da5a03f11561000257505060405151915050801561088a57610002565b6100cf6004356001547f5ef00f180000000000000000000000000000000000000000000000000000000060609081526064839052600160a060020a039190911690635ef00f189060849060009060248183876161da5a03f1156100025750505050565b600160a060020a036004351660009081526003602052604090205460ff165b6060908152602090f35b60206004803580820135601f8101849004909302608090810160405260608481526100cf9460249391929184019181908382808284375050604080516020601f8935808c01359182018390048302840183019094528083529799986044989297509290920194509250829150840183828082843750949650505050505050600254604080517f6d2d4bac0000000000000000000000000000000000000000000000000000000081526004818101928352855160448301528551600160a060020a039490941693636d2d4bac93879387939192839260248301926064019160809181908490829085906000906020601f850104600f02600301f150905090810190601f16801561041c5780820380516001836020036101000a031916815260200191505b508381038252848181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104755780820380516001836020036101000a031916815260200191505b509450505050506000604051808303816000876161da5a03f115610002575050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff19166004351790556100cf565b600080547f5beb8a310000000000000000000000000000000000000000000000000000000060609081526107fc9291600160a060020a031690635beb8a319060649060209060048187876161da5a03f1156100025750506040515191505090565b6107fc600054600160a060020a031681565b6100cf6004356001547f5e823d960000000000000000000000000000000000000000000000000000000060609081526064839052600160a060020a039190911690635e823d969060849060009060248183876161da5a03f1156100025750505050565b6102ef60043560036020526000908152604090205460ff1681565b6080602060248035600481810135601f8101859004909402850160405260608481526100cf958235959294604494929392019190819083828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506002546040517fc72ef41f0000000000000000000000000000000000000000000000000000000081528089018b8152602482018b81528b51998301999099528a519799600160a060020a03939093169863c72ef41f988d98508c97508b96509194509260448301926084019160809181908490829085906000906003600f6020601f8701040201f150905090810190601f1680156106e15780820380516001836020036101000a031916815260200191505b508381038252848181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f16801561073a5780820380516001836020036101000a031916815260200191505b50955050505050506000604051808303816000876161da5a03f11561000257505050505050565b6107fc600154600160a060020a031681565b6100cf6004356001547ff074347e0000000000000000000000000000000000000000000000000000000060609081526064839052600160a060020a03919091169063f074347e9060849060009060248183876161da5a03f1156100025750505050565b6002805473ffffffffffffffffffffffffffffffffffffffff19166004351790556100cf565b60408051600160a060020a03929092168252519081900360200190f35b604080516002547f35960812000000000000000000000000000000000000000000000000000000008252600482018590523460248301529151600160a060020a039290921691633596081291604481810192600092909190829003018183876161da5a03f115610002575050505050565b604080516002547f5b28e44500000000000000000000000000000000000000000000000000000000825260048201869052602482018590529151600160a060020a039290921691635b28e44591604481810192600092909190829003018183876161da5a03f115610002575050604080516001547fa9059cbb00000000000000000000000000000000000000000000000000000000825230600160a060020a0390811660048401526024830187905292519216925063a9059cbb916044828101926000929190829003018183876161da5a03f11561000257505050505050565b600260009054906101000a9004600160a060020a0316600160a060020a031663cacb4f16866040518260e060020a028152600401808281526020019150506040604051808303816000876161da5a03f115610002575050604080518051602082015160025460e060020a631bf6912d028452600484018b9052935191965094600160a060020a03939093169350631bf6912d92602483810193919291829003018183876161da5a03f115610002575050506000811115610b0257604080516001547f18160ddd00000000000000000000000000000000000000000000000000000000825291518392600160a060020a0316916318160ddd91600482810192602092919082900301816000876161da5a03f11561000257505050604051805190602001501015610a9857610002565b600160009054906101000a9004600160a060020a0316600160a060020a031663a9059cbb85836040518360e060020a0281526004018083600160a060020a03168152602001828152602001925050506000604051808303816000876161da5a03f115610002575050505b808285600160a060020a03167fbf334802c86a270265a8ca2656b2bff943a5f2a75b3adaf4b282052663bb6624306040518082600160a060020a0316815260200191505060405180910390a4505050505056",
    address: "",
    generated_with: "2.0.6",
    contract_name: "Node"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Node error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Node error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Node error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Node error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Node = Contract;
  }

})();
