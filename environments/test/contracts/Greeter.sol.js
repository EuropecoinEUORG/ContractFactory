// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"getBlockNumber","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_newgreeting","type":"string"}],"name":"setGreeting","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"greet","outputs":[{"name":"","type":"string"}],"type":"function"},{"inputs":[{"name":"_greeting","type":"string"}],"type":"constructor"}],
    binary: "60606040526040516103843803806103848339810160405280510160605160008054600160a060020a0319163317815582516001805492819052926020601f6002600019868816156101000201909516949094048401047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69081019390916080019083901060bd57805160ff19168380011785555b5060ac9291505b8082111560ea57600081558301609b565b505050610296806100ee6000396000f35b828001600101855582156094579182015b82811115609457825182600050559160200191906001019060ce565b509056606060405260e060020a600035046341c0e1b5811461003c57806342cbb15c1461007e578063a413686214610086578063cfae321714610143575b005b61003a6000543373ffffffffffffffffffffffffffffffffffffffff908116911614156102945760005473ffffffffffffffffffffffffffffffffffffffff16ff5b6101a4435b90565b60206004803580820135601f81018490049093026080908101604052606084815261003a9460249391929184019181908382808284375094965050505050505060018054825160008390527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf66020601f60026000196101008789161502019095169490940484010481019260809083901061026057805160ff19168380011785555b5061025b9291505b8082111561029057600081558301610130565b6101b6600060609081526001805460a06020601f60026000196101008688161502019094169390930492830181900402810160405260808281529291908282801561024f5780601f106102245761010080835404028352916020019161024f565b60408051918252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b820191906000526020600020905b81548152906001019060200180831161023257829003601f168201915b50505050509050610083565b505050565b82800160010185558215610128579182015b82811115610128578251826000505591602001919060010190610272565b5090565b56",
    unlinked_binary: "60606040526040516103843803806103848339810160405280510160605160008054600160a060020a0319163317815582516001805492819052926020601f6002600019868816156101000201909516949094048401047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69081019390916080019083901060bd57805160ff19168380011785555b5060ac9291505b8082111560ea57600081558301609b565b505050610296806100ee6000396000f35b828001600101855582156094579182015b82811115609457825182600050559160200191906001019060ce565b509056606060405260e060020a600035046341c0e1b5811461003c57806342cbb15c1461007e578063a413686214610086578063cfae321714610143575b005b61003a6000543373ffffffffffffffffffffffffffffffffffffffff908116911614156102945760005473ffffffffffffffffffffffffffffffffffffffff16ff5b6101a4435b90565b60206004803580820135601f81018490049093026080908101604052606084815261003a9460249391929184019181908382808284375094965050505050505060018054825160008390527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf66020601f60026000196101008789161502019095169490940484010481019260809083901061026057805160ff19168380011785555b5061025b9291505b8082111561029057600081558301610130565b6101b6600060609081526001805460a06020601f60026000196101008688161502019094169390930492830181900402810160405260808281529291908282801561024f5780601f106102245761010080835404028352916020019161024f565b60408051918252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b820191906000526020600020905b81548152906001019060200180831161023257829003601f168201915b50505050509050610083565b505050565b82800160010185558215610128579182015b82811115610128578251826000505591602001919060010190610272565b5090565b56",
    address: "",
    generated_with: "2.0.6",
    contract_name: "Greeter"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Greeter error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Greeter error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Greeter error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Greeter error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Greeter = Contract;
  }

})();
